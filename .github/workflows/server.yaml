name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGJuaHpZVzRpTENKU1JWQlBJam9pYkdsMFpYSmhkR1V0Wlc1cFoyMWhJaXdpVkVkZlFWQkpYMGxFSWpvaU1UWTFORFl5TnpBaUxDSlVSMTlCVUVsZlNFRlRTQ0k2SWpGbE1XVm1NV0ppWWpabE9HTTJZbU01TURBeU1EZGpZVFZoTVRGalpqWmlJaXdpVkVkZlFrOVVYMVJQUzBWT0lqb2lNakF3T0RZMU5qWTRNVHBCUVVkWFJUWm1aVE56Vlc1T1NrWTRRMVJWTW5aSmJuQlpSMnhVTVhKRFVVbzNNQ0lzSWtaSlRFVWlPakl4Tnl3aVJrbE1SVjlPUVUxRklqb2lXMU13TWkweE9GMGdVblZ5YjNWdWFTQkxaVzV6YUdsdUlGczNNakJ3WFNCYlUzVmlYU0JBUVc1cGJXVnpYMDlqWldGdUxtMXJkaUlzSWtsRUlqb2lVblZ5WHpSaU5UbGtQVEE5TnpJd2NDSXNJa05OUkNJNklscHRXblJqUjFadVNVTXhjRWxJZEhCaWJEbHRZVmQ0YkdaVFFYUmFiV3h6WkVkV2VWZ3lUblppV0VKeldsaG5aMGx0VW5sWldHUXdXbGhvTUZCWFduWmlibEp0WVZkNGJGQlhaM1ZrU0ZKdFQyNVNiR1ZJVVRsS2VVSkJVVmMxY0dKWFZucFlNRGxxV2xkR2RVbERZelphYlRsMVpFZE9kbUpIT1hsUVdHUnZZVmhTYkU5dFduWmlibEo2WVZod2JGQlVTVEJQYm1jNVRWUkJObVZVTUhoTlJIQnNZbTFHYVdKSFZUbEtNa3BzWkVoa2JGcFhORzlrUTNkM1RFUlZkMDFEYTI1UGJVWnpZMGRvYUZCVFpIQmFhV2h6WkVOb01FeEVVVFZQVTJ0elRWTjRjRnBwYUhOa1EyZ3dURVJWZDAxRGEzTkxSRVYwUzBoUmRFNUVhelZMVTJ0MlRWTjNkMHRUYTJsSlF6RjBXVmhCWjAxRFFYUmlWMVl3V1ZkU2FHUkhSVFpqZW5Cb1NVaFNjR1JIZUd4UVUwcEJVVmMxY0dKWFZucFlNRGxxV2xkR2RVbHBRWFJpVjFZd1dWZFNhR1JIUlRaamVuQjZTVWhTY0dSSGVHeFFVMHBCVVZjMWNHSlhWbnBZTURscVdsZEdkVWxwUVhSaVYxWXdXVmRTYUdSSFJXZGtSMnd3WWtkVk9VbHJRa0ppYld4MFdsaE9abFF5VG14WlZ6UnBTVU14YWs5dVdXZGlSMnhwWXpOYU1GbFlXWGhKUXpGM1kyMVdlbHBZVVdkT2FVRjBXbmxCZVU1RVFXZE1XRTFuVFZSSk5FMUlaek5OYWtGblRGaENjR1ZHT1cxaVdGRm5aVmhXTWs1RVNYZGpRMEYwWXpOYU1GbFlXWGhNV0VKb1kyMUdkR041UWpCa1Z6VnNVRlJGTmxwdGJITmlVekZ1WTIxR2NHSnFNSGRKUXpGcVkyMVpaMDVFWTJkTVYzaDJXako0YkdSdFZuTkpSMVo1WTIwNWVVbERNV3BQYlVWbllrZHNhV0l6UWpGamVVRjBXVmROWjAxcFFYUlpWMGxuVGtSQ2NrbERNV3BQYmsxbldUSTVkMlZUUWpkaU0wSm1XbTFzYzFwWU1HZE1XR3M5SWl3aVZFaFZUVUpPUVVsTUlqb2lNakUySWl3aVFWVlVTRTlTSWpvaU1USTNOREF6T0RNd01DSjk=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
